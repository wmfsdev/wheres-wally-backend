// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Player {
  id          Int       @id @default(autoincrement())
  name        String?   @default("guest")
  gameLength  Int?
  createdAt   DateTime  @default(now())
  coordinates FoundCoordinates[]
  session     Session?  @relation(fields: [sessionId], references: [id])
  sessionId   String?   @unique @default("")
}

model Session {
  id          String   @id
  sid         String   @unique
  player      Player[]    
  data        String
  expiresAt   DateTime
  createdAt   DateTime @default(now())
}


model FoundCoordinates {
  id            Int     @id @default(autoincrement())
  xy            Player  @relation(fields: [xyId], references: [id])
  xyId          Int
  coordinates   Int[]
}

model ImageBoard {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  imageURL     String?
  coordinates  Coordinate[] // fx. [ [56, 78], [38, 23], ... ]
}

model Coordinate {
  id          Int          @id @default(autoincrement())
  xy          ImageBoard   @relation(fields: [xyId], references: [id])
  xyId        Int
  coordinates Int[] // fx. one of the indexes from Coordinate[] [56, 78]
} 




// model Game {
//   id      Int     @id @default(autoincrement())
//   images  ImageBoard[]
// }

// imageboard
// game         Game  @relation(fields: [gameId], references: [id])
  // gameId       Int